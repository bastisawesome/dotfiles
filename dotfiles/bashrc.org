#+TITLE: Bashrc
#+PROPERTY: header-args :tangle ~/.bashrc
#+AUTHOR: BastIsAwesome

* Bash Config
If not running interactively, don't do anything.

#+begin_src bash
[[ $- != *i* ]] && return
#+end_src

* Aliases
#+begin_src bash
alias ls='ls --color=auto'
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias ping='ping -c 20 $@'
alias genpass='python -c "import uuid; print(uuid.uuid4().hex)"'
alias java8='/usr/lib/jvm/java-8-jdk/bin/java'
alias pyc='python -m compileall'
#+end_src

Safety features
#+begin_src bash
alias cp='cp -i'
alias rm='rm -i'
alias mv='mv -i'
#+end_src

Editors
#+begin_src bash
alias emacs="emacsclient -a 'nvim' -c"
alias vim='nvim'
#+end_src

* Git Prompt
Source the Git prompt, if Starship prompt is not being used.

#+begin_src bash
# source /usr/share/git/completion/git-prompt.sh
# GIT_PROMPT_ENABLED=true
#+end_src

* Prompt
Setup the prompt if not using Starship prompt. Option for with or without Git prompt.

#+begin_src bash
if ! hash starship 2>/dev/null; then
    if ! GIT_PROMPT_ENABLED; then
        export PS1="\[\e[96m\]\W\[\e[m\] \[\e[92m\]\\$\[\e[m\] \[\e[m\]\[\e[1;34m\]"
    else
        export PS1='\[\e[0;96m\]\W\[\e[0;38;5;46m\]$(__git_ps1 " %s") \[\e[0;94m\]\$ \[\e[0m\]'
    fi
#+end_src

** Starship
Enable Starship prompt

#+begin_src bash
else
    eval "$(starship init bash)"
fi
#+end_src

* Path
Configure the custom PATH.

#+begin_src bash
export PATH=$PATH:/home/bast/local/bin:/home/bast/local/opt/bin:/home/bast/.local/bin

if [ -d "$HOME/.config/emacs/bin" ]; then
	PATH=$PATH:$HOME/.config/emacs/bin
fi
#+end_src

* History
Configure history file.

#+begin_src bash
HISTCONTROL=ignoredups:erasedups
#+end_src

* Python Virtual Environments
#+begin_src bash
#export WORKON_HOME=~/.virtualenvs
#source /usr/bin/virtualenvwrapper.sh
#+end_src

Ensure that Python allows tab-completion, even with virtual environments

#+begin_src bash
if [[ -f ~/.config/.pythonrc.py ]]; then
    export PYTHONSTARTUP=~/.config/.pythonrc.py
fi
#+end_src

Pipenv autocomplete

#+begin_src bash
if hash pipenv 2>/dev/null; then
    eval  "$(_PIPENV_COMPLETE=bash_source pipenv)"
fi
#+end_src


* Dotbare
Configure Dotbare.

#+begin_src bash
export DOTBARE_DIR=dotfiles
#+end_src
